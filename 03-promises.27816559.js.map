{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAK,sBAAoBJ,QAAeC,SACzCA,MA7BMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIZ,EAAQa,OAAOF,EAAEG,cAAcd,MAAMe,OACzC,MAAMC,EAAOH,OAAOF,EAAEG,cAAcE,KAAKD,OACnCE,EAASJ,OAAOF,EAAEG,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BpB,EAAcoB,EAAI,EAAGlB,GAClBmB,MAAKC,GAAUxB,EAAAyB,OAAOC,QAAQF,KAC9BG,OAAMC,GAAS5B,EAAAyB,OAAOI,QAAQD,KAEjCxB,GAASgB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","step","amount","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.27816559.js.map"}