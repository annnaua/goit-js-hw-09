{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SACjDA,MA7BMS,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIb,EAAQc,OAAOF,EAAEG,cAAcf,MAAMgB,OACnCC,EAAOH,OAAOF,EAAEG,cAAcE,KAAKD,OACnCE,EAASJ,OAAOF,EAAEG,cAAcG,OAAOF,OAEpCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BrB,EAAcqB,EAAI,EAAGnB,GAClBoB,MAAK,SAAAC,G,OAAUzB,EAAA0B,OAAOC,QAAQF,MAC9BG,OAAM,SAAAC,G,OAAS7B,EAAA0B,OAAOI,QAAQD,MAEjCzB,GAASiB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","step","amount","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f57c9837.js.map"}